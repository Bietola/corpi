<m+tab><m-2><m-1>kko<esc>ko<wbf>solve :: [Int<esc>A<wbf> -> [Int<esc>ds]o<wbf>solve : <esc>ddkyypf:C<wbf>in<esc>bC<wbf>lst = <esc>bbcwi<wbf>np<esc>A<wbf>zip inp inp<esc>BBBi<wbf>map <esc>uA<wbf><cr><tab>& mul<esc>bC<wbf>map mul<esc>bC<wbf>*<esc>i<wbf>(<esc>lxA<wbf>)<esc>bc<cps>lcl+<cps>BBC<wbf>filter \<esc>cc<cps>uA<wbf><esc>bf\C<wbf>()<esc>hi<wbf>\<esc>la<wbf>x, y<esc>A<wbf>-<bs> -> x + y == 2020<cr>& take 1<cr><esc>ddkftC<wbf>head<esc>A<wbf><esc>kf\i<wbf>(l<bs><esc>lxA<wbf>)<esc>jo<wbf>& (\(x, y<esc>la<wbf>-<bs> -> x * <bs><bs>* y<esc>:w<cr>BBBBBBllC<wbf>(*<esc>:w<cr>jjjA<wbf>solve<esc>bi<wbf>getCon<tab> >>= <esc>bbKkkkkkkkV}}ddddd:w<cr>ka<wbf>za<tab><cr><cr><m-2><m-1>imain :: IO ()<cr>main = solve<esc>ggO<wbf><esc>O<wbf>solve = <esc>O<wbf>solve :: [Int<esc>A<wbf> -> Int<esc>jA<wbf>zip<esc>Bbi<wbf>inp <esc>A<wbf> inp inp<cr><tab>& i<bs>filter (\(x, y) -> x + y == 2020<esc>o<wbf>& head<cr><esc>ddkA<wbf> & (*<esc>jjkkkbbbbjbbbbbbbkkO<wbf><esc>O<wbf>impo<tab> Pre<tab><esc>bC<wbf>Da<tab><esc>bC<wbf>Fuc<tab><tab><tab><tab><tab><tab><esc>:w<cr>}}kf&;xi<wbf><><esc>i<wbf>*<esc><m-2>O<wbf>haskell fold over tubp<bs><bs><bs>uple<cr>j<cr><m-1><sm+cr><m- >ghci<cr>foldl (+)<bs>2) (q, <bs><bs><bs>1 ,<bs><bs>, 2, 3)<cr><esc>kA<wbf><esc>BBBi<wbf>1 <cr><esc>k<cps>f+xxi<wbf>+<cr><esc>kf1<cps>f(C<wbf>[1, 2, 3]<cr><esc>kf[C<wbf>()<esc>i<wbf><m-2><esc>o<wbf>haskell fold over tuple<cr>jjjjk<cr> gg<m-1><esc><cps><sm-C<wbf>>bC<esc>xyp<cps>yypfhC<wbf>(\(x, y<esc>A<wbf><esc>i<wbf> -> x * y<esc>:w<cr>kjds)<cps>ds)<cps>BBBBBC<wbf>uncu<tab> <bs><bs>y<tab> (*<esc>:w<cr>kJ:w<cr>}}A<wbf> <bs><esc>bi<wbf>getCon<tab> >>= <esc>BBKEEa<wbf> wor<tab><esc>bcwli<wbf>nes<tab><esc>a<wbf> .<esc>bdwA<wbf><esc>bdwxa<wbf><esc>i<wbf>solve <esc>A<wbf> lines<esc>bbbea<wbf> read<esc>bi<wbf>. <esc>ebbbbdwbdwA<wbf> <<<esc>hi<wbf>=<esc>A<wbf> e<bs>get<tab><tab><tab><esc>:w<cr>BBBBbbbi<wbf>printF<bs><esc>ui<wbf>putS<tab><tab> $ <esc>lbdwi<wbf>=<bs><esc>f=dWi<wbf><> <esc>i<wbf><esc>i<wbf>&<esc>BBBBBf<BBBBBi<wbf> <esc>i<wbf><><esc>ha<wbf>$<esc>eebi<wbf>getCon<tab> <$> <esc>f>bDx:w<cr>kjf<;<cps>f<cps>F<;xxxi<wbf>=<<<esc>:w<cr>bdwi<wbf>. <esc>eehhxxxi<wbf>=<<<esc>:w<cr>bbEEEflKbbi<wbf>fa<bs>map <esc>bflKbbKbKbbKffxBbKbxxxbbbdwdwelxxi<wbf> ==<bs><bs>=<bs>>>= <esc>bdWi<wbf><$> <esc>blA<wbf> >>= print<esc>bC<wbf>putS<tab><tab><esc>BBBBBBBBBBi<wbf><cr>contents <- <esc>bbcwi<wbf>npt<esc>kjkjxkA<wbf><esc>jbf<cps>kA<wbf> <bs> do<esc>jea<wbf><cr><esc>ldWi<wbf><esc>eeEEEEa<wbf>i<bs> inp<esc>bbea<wbf>)<esc>BBBBBbi<wbf>(<esc>I<wbf>putStrLn $ <esc>f>Dx:w<cr>BBBBBBBBebbcwpri<wbf>nt<esc>bea<wbf>Ln<esc>hxx:w<cr>kjkA<wbf> <<esc>uV<cps>kkV}gc}kkkV}t<cps><cps>kkkVgd}y}pko<wbf><esc>jkxxjgcgcu}}kkkV}gc}kddddbC<wbf>e<bs>getCon<tab> <$><esc>BBi<wbf>=<<<esc>hhi<wbf>print <esc>llea<wbf> <esc>A<wbf><esc>bbi<wbf>(<esc>A<wbf> solve . map read . lines<esc>A<wbf>)<esc>:w<cr>BBBBBBBBBdWbdwA<wbf>=<bs> ==<bs><bs>>>= print<esc>:w<cr>bbbbbbbbbbbdwxxxxf)i<wbf> <$> geton<bs><tab>c<bs><bs>C<tab><esc>:w<cr>kjBBBBBBBBlds)f<dWBBBBBBfgdwBBBBBBPa<wbf>>>= <esc>a<wbf>print . <esc>f=bDx:w<cr>Fgi<wbf><cr><esc>kA<wbf><bs><esc>:w<cr>3kda<wbf>p:w<cr>/zip<cr>dwicarte<esc>u<m-2><cps>o<wbf>haskell all combinations<cr>j<cr><c-d><c-d><m-1>ea <*><esc>bbi<wbf>()<esc>i<wbf>,<esc>xi<wbf>*<esc>la<wbf><esc>hui<wbf>,) <$> <esc>:w<cr>BBi<wbf>Li<bs><bs>liftA2 <esc>eebdwf<dwdwx:w<cr>A<wbf><esc>BBB<m-2><m-1>ggyypfDcwC<wbf>on<tab><esc>bdwi<wbf>Appl<tab><esc>lD:w<cr>jjjj<m-2><m-1><m-2><m-1>kBBBKA<wbf> inp<esc>:w<cr>ha<wbf>skell-aoc2<bs>-1p1<cr><m-7><m-1><c-c><m-1>jBlkEa &<esc>jBDjBDddkA<wbf><esc>uuulC<wbf><esc>kBBbcwma<wbf>tch<esc>bjA<wbf><esc>kbbc<cps>bcwm<cps>A<wbf><esc>jA<wbf><esc>kbbbbbbba<wbf>r<bs>tc<esc>jkxjA<wbf>my<bs>t <esc>JJf)A<wbf><esc>A<wbf><esc>A<wbf><bs><esc>u%%FRbdwbubdwbdwf0bblcwma<wbf>tch<esc>f0dwEEEEEecl()<cps>i<wbf>mt .^ R.group 0<esc>:w<cr>kjds):w<cr>BBàtt./pro<wbf><tab><cr><esc><cps>a<wbf><esc>k<cr><cps>a<wbf><esc><cps><cps><cps><c-u><c-d><c-u><c-u>s<cps>k<cr>i<wbf><esc>k<cr><cps><cps><c-u><c-u><c-u><c-u><c-u><c-d><c-d><c-d><c-d><c-d><c-d><c-u><c-u><c-u><c-u>jjjjj<cps><cps>a<wbf><esc>k<cr><cps><cps><cps><cps>a<wbf>ak<bs><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><m-2><m-2><m-1><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>gtF+blcwco<wbf>ncat <esc>:w<cr>ds)ufwi<wbf>"<esc>ds):w<cr>fwi<wbf><<esc>w:w<cr>BB<c-u>}o<wbf><esc>ko<wbf>+++<esc>I<wbf>lhs<esc>a<wbf> <esc>A<wbf> rhs =<esc>ko<wbf>+++<esc>I<wbf>(<esc>xxDi<wbf>(+++<esc>A<wbf> :: Text -> Text -> Text<esc>jA<wbf> T.concat [lhs, rhs<esc>zz:w<cr>GfTdWi<wbf>+++ <esc>bdwi<wbf><> <esc>bi<wbf>(<esc>lxEEa<wbf>)<esc>:w<cr>F x:w<cr>/sh<cr>nncwno<wbf><tab><esc>:w<cr>Gf<;;;C<wbf>$ "hello tere<bs><bs><bs><bs>there<esc>Bbbbbdwbdw:w<cr>j:w<cr>F(;i<wbf>return <esc>:w<cr>li<wbf>$ <esc>:w<cr>Glli<wbf>"hello there" & <esc>f$Dx:w<cr>A<wbf><bs><esc>A<wbf>)<esc>hFh;ds):w<cr>fmuuuuu<c-u>kkkkkkjjzzo<wbf>import qualified Turtle.Patter <bs>n as ShP<esc>:w<cr>G<c-u>kkkkzzddGfmi<wbf>R<esc>uukkkkkkkfa<wbf>Dx:w<cr>kkjjjjjjkkkA <esc>ukA<wbf> as R<esc>}}kzzzzdduddkuddkA<wbf> hiding<esc>uuGfm,i<wbf>R.<esc>:w<cr>f$Dx:w<cr>Fh;ds):w<cr>gta<wbf><esc>k<cr><cps><cps><cps><c-u><c-u><c-u><c-u><c-u><c-u><c-d><c-d><c-d><c-u>gtI<wbf>-- <esc>o<wbf><bs><bs><bs><esc>zzddkyypgccfmC<wbf>n<bs>undefined<esc>4k^I<wbf>--<esc>ugcc:w<cr>9jfhda<wbf>"dwi(<esc>uuudWdwuudWdwdwdwi<wbf>(<esc>usf))A<wbf> <$> ()<esc>i<wbf><esc>blds<A<wbf><esc>i<wbf><esc>C<wbf>"H<bs>hello there<esc>:w<cr>i<wbf><esc>ci<wbf>"<><esc>i<wbf>esc<esc>la<wbf>iweconawiejo<esc>bcwdfgsghdcgxjdhei<wbf>dhs<esc>vblxxuulxxxxxxla<wbf>a<esc>lllfsa<wbf>Ajk<esc>:w<cr>hhhhhxi<wbf><esc><esc>:w<cr>gta<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps><c-u><c-u><c-u><c-u><c-u><c-u><c-u>a<wbf><esc>k<cr><cps><cps><c-u><c-u><c-d><cps><cps>a<wbf><esc>k<cr><cps><cps>t<cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf>a<esc>k<cr>e<bs>hello<wbf><cr>there<cr><c-c><esc><cps>a<wbf><esc>i<wbf><c-r>head<cr>s<bs>cd ..<cr><esc>kk<cr><cps>kdwi<wbf>cat <esc>f-dwdw<cr><cps>kA<wbf>| rg esc<cr><esc>kf\|<cps>f|Da<wbf>| rg esc<cr><esc>kk<cr><cps>k<cps>k<cps>fe;;C<wbf>jk<cr><esc>kEEa<wbf> | sed -<bs>ì<bs>'s/cps<bs><bs><bs><lft>c<bs><esc>l<cps>li<wbf><cs<bs>ps>/<esc>/g'<cr><esc>kf|;C<wbf>| ./bin<tab>pr<tab><cr><esc>kA<wbf>| rg <esc><cr><esc>k<cps>A<wbf><esc>bbi<wbf>'<esc>A<wbf>'<cr><esc>kA<wbf><esc>i<wbf>,<bs>.*?[iIaAoO]<cr><esc><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>><rgt><rgt><rgt><rgt><rgt><rgt><bs><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><rgt><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><lft><bs>b<rgt><rgt><rgt><rgt><rgt><bs>c<rgt><rgt><rgt><rgt><rgt><rgt><bs><rgt><bs>(a<wbf><rgt><rgt><rgt><rgt><rgt><bs>b<bs>c<lft><lft><lft><lft><lft><bs>b<lft><lft><lft><lft><lft><lft><lft><bs>b<lft><lft><lft><lft><lft><bs>a<esc>H<cps>H<cps>H<m-1>GBBBBBBBdwdwA<wbf> . lineToTet<esc>i<wbf>x<esc>:w<cr>kkkkkkkjjbbbi<wbf>lit<tab> . <esc>:w<cr>jkGf.;;;Dx:w<cr>ds):w<cr>:GA<wbf><cr>:G<cr>cciI<bs>Finally manage to make regex work<esc>:w<cr>:wq<cr><cr>kkk<c-j>kddkddkkkkddk:w<cr>:GA<wbf><cr>cc<esc>u:w<cr><c-k>cci<wbf>Remove<esc>bC<wbf>Remove surplus comments<esc>:w<cr>:wq<cr>:q<cr><m-2><cps>O<wbf>reps<tab><cr>corpiA tool for r<bs>creating dasher corpi using streamc``.<bs>`yy<m-1>:G p <bs><bs>remote add origin <sc-V><cr>:G psuo main<cr><cr><m-2>r<esc>H<cps>H<cps>H<cps>HHH<cps>HGgg<cps>H<cps>H<cps>H<cps>HH<cps>HHHHHgg<m-1><cps>:wq<cr><sm-C<wbf>><sa-S><m-1>EEEea'<esc>EEB9kkjkkbbbjC<wbf>Get stdin<esc>jBBcwi<wbf>np<esc>f<dwi<wbf>= <esc>kkbC<wbf>let<esc>jjfdjko<wbf><esc>o<wbf><tab><< <bs><bs><bs>-- Remove ab<bs><bs>banner<esc>kkBBdf>}2jpI<wbf><tab><esc>o<wbf><esc>k3klx3jI<wbf>woBanner = <esc>f<Da<wbf>inp<esc>3kBBB<m-2>o<wbf>haskell read all stdin and process it later<cr>j<cr><esc>Hjjjjjjjo<wbf>haskell read all stdin<cr>jjjjj<m-1>uuuuuuuuuuuuuuuuuddkkkkkkjjjjjjEEa'<esc>f<lct|s-<cps>F<i<wbf>(<del><esc>f-a<wbf>).*?(><esc>F.i<wbf>[<esc>ui<wbf>(?:<del><esc>f?a<wbf>)<esc>Bf:li<wbf>(<esc>lxi<wbf>[]<esc>i<wbf><><esc>la<wbf>|<esc>eF);a<wbf>)<esc>F.xi<wbf>[]<esc>i<wbf>^<><esc>:w<cr><m-2>ggHH<c-u><c-u>gg<c-d><c-d>kkk<cps>O<wbf>vim regex \<esc><m-1>:he<bs> \xe<bs><bs>ze<cr>:q<cr><m-2><cps>O<wbf>zero-width lookahead<cr>jj<cr><m-1>ds):w<cr><m-2><esc>K<m-1>hcl=<cps>:w<cr>F)bds)f(;lds):w<cr>f.cmfmf%Dx:w<cr>o<wbf><cr><tab>return oneline''<esc>:w<cr>kkea<wbf>'<esc>:w<cr>A<wbf> %~ (\x -> x<esc>:w<cr>jkBBC<wbf>id<esc>:w<cr>jkF(<m-2><cps>o<wbf><esc>Jo<wbf>online<tab><tab><tab><cr><m-1>kkyi|<m-2><c-v><bs><m-1>"+yi|<m-2><c-v><bs><m-1>bhh"+yt|<m-2><c-v><lft><lft><r><m-1>yt<esc>vt|;"+y<m-2><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><c-v>hello<wbf><bs><bs><bs><bs><bs>B<lft><s-<r><lft><rgt><rgt><rgt><rgt><rgt><rgt><lft><lft><rgt><rgt><lft><rgt><lft><lft><rgt><rgt><m-1>f?a:<esc>lxf)a<wbf><esc>a<wbf>(??=<bs><bs>=><del><del>)<esc>:w<cr><m-2><cps>KJH<bs>:<cps>i<wbf><bs>:(i(?=<ra<esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps>kfe;;;C<wbf>s-<cr><esc><cps>i<wbf><esc>kfs;;;C<wbf>cps<cr><esc><cps>a<wbf><esc>k<cr><cps><cps>i<wbf><esc><cps>a<wbf><esc>k<cr><m-1><m-2><m-1><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps><m-2><cps>O<wbf>haskell get second element of list<cr>j<cr>ohaskell index list<cr>jj<cr><esc>H+<m-1><cps><cps>t<cps>a<wbf><esc>k<cr><cps><cps><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps><c-u><c-d><c-u><c-d><cps><cps><m-2><cps>K<m-1><cps><cps>a<wbf><esc>k<cr><cps><cps><m-2><m-1><cps>A<wbf><esc>k<cr><m-1><cps><cps>a<wbf><esc>k<cr><m-2><cps>JO<wbf>hoog<esc>o<wbf>hgo<esc>o<wbf>hog<esc>o<wbf>ho<tab><cr>traversed<cr><m-1><esc><cps><cps>a<wbf><esc>k<cr><cps><cps><m-2><cps><cps>Gkkkkkkjf>a<wbf>)<esc>l:w<cr>zzf)lxh:w<cr>fTi<wbf>["<esc>", <esc>ldWdwdwdwd<cps>f,xi<wbf> <><esc>f]llhh:w<cr>BBBBBi<wbf>T.concat [<esc>f<dw<bs>i<wbf>,<esc>A<wbf><esc>i<wbf><esc>i<wbf>]<esc>:w<cr>kj:<cps>F.;;,dwdw:w<cr><m-2><m-1>gta<wbf><esc>k<cr><cps><cps>a<wbf><esc>kA<wbf> | <esc>bbC<wbf>esc<cr><esc>kA<wbf><esc>bi<wbf>(<esc>A<wbf>|cps)<esc>Bi<wbf>'<esc>A<wbf>'<cr><esc>kA<wbf><esc>bli<wbf>.*?<><esc>i<wbf>wbf<cr><esc>kf)a<wbf>\K<cr><esc>kf\xx<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>t<cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>a<wbf><esc>k<cr><cps><cps>gtgtgtgtgtgtgtgtgtgtgtko<wbf><bs><bs><bs>-- TODO/CC: try re<esc>bbC<wbf>Try removing this shit<esc>bDbA<wbf>and eh<bs><bs>check if cps <bs>s<esc>jkA<wbf><esc>bi<wbf><<esc>ea<wbf><esc>i<wbf>><esc>A<wbf> actually<bs><bs>y<m-2><esc>J<cps>O<wbf>actualy<bs>ly<cr>d<m-1><esc>i<wbf>l<esc>A<wbf> disappear in `oneline'`<esc>;w<cr>dd:w<cr>kkyypfT<cps>fTC<wbf>Find why ``<esc>i<wbf><esc>i<wbf>the <esc>la<wbf>B<<bs>><esc>A<wbf>'<bs>s...<esc>:w<cr>bbhhi<wbf>B<esc>:w<cr>:w<cr><m-8><c-c><m- ><m-1>hGet<m-2><m-1><cps>bxxxxi<wbf>getContents <esc>bi<m-8><m-1>do<cr>inp<c-c><m-8><c-d><c-c><m-1><lt>_<bs><bs><gt>-<bs><bs><lt>-7<esc><m-7><m+ta<wbf>b>oinmi<bs><bs><bs><bs><bs><m+tab><m+tab><sm-C><m+tab><m+tab><m+tab><m-1><esc>ea<cr>lines & fmap read & <esc>A&p<cr><m-7><m+tab>pomo 20<cr><m+tab><m-1><m-7>kkjjjjkkzajkjkko<esc>ddkjkko<wbf>future:<cr><tab>- [ ] <esc>A<wbf>Add alternative <esc>bC<wbf>an <lt><>jo<esc>ddkA<wbf> with the nvim interface <esc>bC<wbf>api<esc>bC<wbf>API to reo<bs>cord alternative <bs>s to ni<bs><bs>snippet expansions in<esc>a<wbf> place<cr><tab>e. g<bs><bs>g. <bs>: <bs><bs>: ``<lft>he<lt>tab<><esc>i<wbf>algt <esc>hhxla<wbf>2 <esc>kkllcwA<wbf>LT<esc>jjhhi<wbf><esc>i<wbf>helloThere<esc>A<wbf><esc>F2cl3<cps>A<wbf><esc>BBBBBllllllEa<wbf> <esc>uEEbbbbEEEEbbla<wbf> send<bs>t from vim API when snippet is <bs><esc>:w<cr>A<wbf>, later <bs> it is processed by `proc<esc>bA<wbf><esc>bbbbfbDxo<wbf><tab>  to ``<esc>i<wbf>he<lt>tab<><esc>bbhhi<wbf>OTHERCAHRS<esc>A<wbf><esc>i<wbf>OTHERCHARS<esc>bbbbbxxxxxxxxxxi<wbf>OTHERCHARS<esc>a<wbf>]<esc>bi<wbf>[<esc>A<wbf><esc>bbli<wbf>[<esc>ea<wbf>]<esc>A<wbf> <esc>A<wbf><bs><esc>hli<wbf><esc>bcwC<wbf>HARSBEFORE<esc>la<wbf>[CHARSAGER<esc>bcwA<wbf>GE<bs><bs>FTER<esc>bbbcwBEFO<wbf>RE<esc>bbbbbbcwA<wbf>u<esc>ubcwA<wbf>FTER<esc>A<wbf><esc>i<wbf>[]<esc>i<wbf>BEFORE<esc>bhi<wbf>helloThere<esc>:w<cr>kfp;;;;i<wbf>prost-<esc>:w<cr>nbcw<cps>ukfp;;;;bbcwpo<wbf>st<esc>:w<cr>A<wbf><esc>jA<wbf><esc>:w<cr>kkkkza<wbf>k:w<cr><m-1><tab><tab><cr><m-8><m-1><m-7><m-8><sa-C><m-1><esc>4kàqfàqfqgdguàqfào<esc>ukjjkàqfàSàvg8<bs>(<bs>(<bs>/<lt>lea<wbf>der<>p/<cr><cr>àpàpàpuuuàààS/misc<cr><cr>G<c-u>Go<esc>o<wbf>" Pad<esc>bi<wbf>Useful <esc>lxi<wbf>p<esc>A<wbf>ding insert modi<bs>tion<esc>bcwmo<wbf>tion<esc>o<wbf><bs><bs>nno<tab> <lt>leader<><esc>àààp<cps>uàS<cr>FpclO<wbf><esc>àààO<wbf>solve=<esc>biip<bs>m<bs>m<bs>m<bs>p<bs>m<bs>n<tab><cr><esc>Azipip<bs><bs>ip<bs><bs>i<tab><tab><tab><tab><cr><bs><><c-c><esc>k<cr><bs><bs><bs>pi<wbf>n<tab>=<bs>=<bs>&filter\<bs>(==2020).(+)&<m-2><m-1><m-2>iuncurry<cr><m-1><esc>bbauncurry <esc>A(uncurry *<esc>:w<cr>àtti<bs>stack build<cr><esc><cps><c-u><c-u><c-u><cps><cps>ti<wbf><esc>Gi<esc>k<cr><m-7>kkjko-<bs><tab>ò <bs><bs><m-1><m-8><sa-C>
